name: Reusable Workflow For Checking Permissions

on:
  workflow_call:
    inputs:
      user-login:
        required: true
        type: string
      npm-package:
        required: true
        type: string
    outputs:
      is-admin-error:
        value: ${{ jobs.is-admin.outputs.error }}
      is-admin:
        value: ${{ jobs.is-admin.outputs.is-admin }}
      is-owner-error:
        value: ${{ jobs.is-owner.outputs.error }}
      is-owner:
        value: ${{ jobs.is-owner.outputs.is-owner }}

defaults:
  run:
    shell: bash

jobs:
  is-admin:
    name: Check if issue submitted by admin on devx-services team
    runs-on: ubuntu-latest
    outputs:
      error: ${{ steps.is-admin.outputs.error }}
      is-admin: ${{ steps.is-admin.outputs.is-admin }}
    steps:
      - name: Validate creator of request is admin
        id: is-admin
        env:
          USERNAME: ${{ secrets.ADOBE_BOT_GITHUB_USERNAME }}
          TOKEN: ${{ secrets.ADOBE_BOT_GITHUB_TOKEN }}
        run: |
          state=$(curl -s -u "$USERNAME:$TOKEN" "https://api.github.com/orgs/adobe/teams/devx-services/memberships/${{ inputs.user-login }}" | jq -r '.state')
          if [ "${{ inputs.user-login }}" = "${USERNAME}" ] || [ "${state}" = "active" ]; then echo "::set-output name=is-admin::true"; else echo "::set-output name=error:::x: Submitter is not an admin belonging to devx-services team. Admins can remove and update any templates."; fi;
  is-owner:
    name: Validate matching add-template issue
    runs-on: ubuntu-latest
    outputs:
      error: ${{ steps.is-owner.outputs.error }}
      is-owner: ${{ steps.is-owner.outputs.is-owner }}
    needs: [is-admin]
    if: ${{ always() && needs.is-admin.outputs.is-admin != 'true' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
      - name: Validate creator of request
        id: is-owner
        run: |
          node src/validate-request-author.js ${{ inputs.user-login }} ${{ inputs.npm-package }}
